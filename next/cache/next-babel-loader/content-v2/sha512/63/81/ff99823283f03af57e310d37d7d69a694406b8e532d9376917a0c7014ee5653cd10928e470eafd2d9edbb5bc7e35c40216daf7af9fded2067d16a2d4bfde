{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rational/u00/repositorios/REACT-REPO/MSSR-NEXT-JS/pages/transfer/[categoria]/[duracion].js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport environment from '../../../src//environments/environments';\nimport { withRouter } from 'next/router'; // reactstrap components\n\nimport { Button, Card, CardBody, CardTitle, CardFooter, Col } from \"reactstrap\";\n\nclass Transfer extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"API_URI\", environment.apiUrlAws);\n\n    this.state = {\n      \"rut\": \"\",\n      \"tipoCuenta\": \"\",\n      \"cat\": \"\",\n      \"config\": \"\",\n      \"email\": \"\",\n      \"titular\": \"\",\n      \"nroCuenta\": \"\",\n      \"banco\": \"\",\n      \"monto\": 0,\n      \"currency\": \"\"\n    };\n    this.getBank = this.getBank.bind(this);\n  }\n  /*!=======================================================\n  * Nombre: componentDidMount\n  * Descripción: Se ejecuta antes del render\n  =========================================================*/\n\n\n  componentDidMount(props) {\n    this.getBank();\n  }\n  /*!=======================================================\n  * Nombre: getBank()\n  * Descripción: Obtiene los datos de la cuenta bancaria.\n  =========================================================*/\n\n\n  async getBank() {\n    const detalle = JSON.parse(localStorage.getItem('detail'));\n    const producto = JSON.parse(localStorage.getItem('table'));\n    producto.forEach(data => {\n      this.setState({\n        monto: detalle.amt,\n        currency: data.currency\n      });\n    });\n    const body = await fetch(`${this.API_URI}/checkout/bank`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json, text/plain, */*'\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      let body = {};\n\n      if (data.statusCode === \"200\") {\n        body = data.body;\n        return body;\n      } else {\n        return body;\n      }\n    }).catch(err => console.log('#Error#', err));\n    this.setState({\n      rut: body.rut,\n      tipoCuenta: body.tipoCuenta,\n      cat: body.cat,\n      config: body.config,\n      email: body.email,\n      titular: body.titular,\n      nroCuenta: body.nroCuenta,\n      banco: body.banco\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"transfer\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          className: \"mx-auto ml-auto mr-auto text-transfer\",\n          lg: \"4\",\n          md: \"6\",\n          sm: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"card-profile profile-bg \",\n            children: [/*#__PURE__*/_jsxDEV(CardBody, {\n              children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                className: \"title\",\n                tag: \"h1\",\n                children: \"Transferencia\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"h4 my-0\",\n                children: this.state.banco\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"h4 my-0\",\n                children: [\"A Nombre de: \", this.state.titular]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"h4 my-0\",\n                children: [this.state.tipoCuenta, \" \", this.state.nroCuenta]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"h4 my-0\",\n                children: [\"Rut: \", this.state.rut]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"h4 my-0\",\n                children: \"Valor a transferir\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"h2\",\n                children: [this.state.currency, \" \", this.state.monto]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"h4\",\n                children: [\"Incluye en el mensaje de la transferencia el nro telefonico o envianos el comprobante a \", this.state.email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n              className: \"d-print-none\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"follow float-center\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn-simple\",\n                  color: \"primary\",\n                  type: \"button\",\n                  size: \"sm\",\n                  href: `/`,\n                  children: [\"Cerrar\", /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"tim-icons icon-minimal-right\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default withRouter(Transfer);","map":{"version":3,"sources":["/Users/rational/u00/repositorios/REACT-REPO/MSSR-NEXT-JS/pages/transfer/[categoria]/[duracion].js"],"names":["React","Component","environment","withRouter","Button","Card","CardBody","CardTitle","CardFooter","Col","Transfer","constructor","props","apiUrlAws","state","getBank","bind","componentDidMount","detalle","JSON","parse","localStorage","getItem","producto","forEach","data","setState","monto","amt","currency","body","fetch","API_URI","method","headers","then","res","json","statusCode","catch","err","console","log","rut","tipoCuenta","cat","config","email","titular","nroCuenta","banco","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport environment from '../../../src//environments/environments';\nimport { withRouter } from 'next/router'\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardTitle,\n  CardFooter,\n  Col,\n} from \"reactstrap\";\n\nclass Transfer extends Component {\n  API_URI = environment.apiUrlAws;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      \"rut\": \"\",\n      \"tipoCuenta\": \"\",\n      \"cat\": \"\",\n      \"config\": \"\",\n      \"email\": \"\",\n      \"titular\": \"\",\n      \"nroCuenta\": \"\",\n      \"banco\": \"\",\n      \"monto\": 0,\n      \"currency\": \"\"\n    };\n    this.getBank = this.getBank.bind(this);\n  }\n\n  /*!=======================================================\n  * Nombre: componentDidMount\n  * Descripción: Se ejecuta antes del render\n  =========================================================*/\n  componentDidMount(props) {\n    this.getBank();\n  }\n\n  /*!=======================================================\n  * Nombre: getBank()\n  * Descripción: Obtiene los datos de la cuenta bancaria.\n  =========================================================*/\n  async getBank() {\n    const detalle = JSON.parse(localStorage.getItem('detail'));\n    const producto = JSON.parse(localStorage.getItem('table'));\n    producto.forEach(data => {\n      this.setState({\n        monto: detalle.amt,\n        currency: data.currency\n      })\n    })\n    const body = await fetch(`${this.API_URI}/checkout/bank`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json, text/plain, */*',\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      let body = {};\n      if (data.statusCode === \"200\") {\n        body = data.body;\n        return body;\n      } else {\n        return body;\n      }\n    }).catch(err => console.log('#Error#', err))\n    this.setState({\n      rut: body.rut,\n      tipoCuenta: body.tipoCuenta,\n      cat: body.cat,\n      config: body.config,\n      email: body.email,\n      titular: body.titular,\n      nroCuenta: body.nroCuenta,\n      banco: body.banco\n    })\n  }\n\n  render() {\n    return (\n      <>\n      <div id=\"transfer\">\n        <Col className=\"mx-auto ml-auto mr-auto text-transfer\" lg=\"4\" md=\"6\" sm=\"12\">\n          <Card className=\"card-profile profile-bg \">\n            <CardBody>\n              <CardTitle className=\"title\" tag=\"h1\">Transferencia</CardTitle>\n              <p className=\"h4 my-0\">{this.state.banco}</p>\n              <p className=\"h4 my-0\">A Nombre de: {this.state.titular}</p>\n              <p className=\"h4 my-0\">{this.state.tipoCuenta} {this.state.nroCuenta}</p>\n              <p className=\"h4 my-0\">Rut: {this.state.rut}</p>\n              <p className=\"h4 my-0\">Valor a transferir</p>\n              <h1 className=\"h2\">{this.state.currency} {this.state.monto}</h1>\n              <p className=\"h4\">Incluye en el mensaje de la transferencia el nro telefonico o envianos el comprobante a {this.state.email}</p>\n            </CardBody>\n            <CardFooter className=\"d-print-none\">\n              <div className=\"follow float-center\">\n                <Button\n                  className=\"btn-simple\"\n                  color=\"primary\"\n                  type=\"button\"\n                  size=\"sm\"\n                  href={`/`}\n                >\n                  Cerrar\n                        <i className=\"tim-icons icon-minimal-right\" />\n                </Button>\n              </div>\n            </CardFooter>\n          </Card>\n        </Col>\n      </div>\n      </>\n    );\n  }\n}\n\nexport default withRouter(Transfer);"]},"metadata":{},"sourceType":"module"}