{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*!\n=========================================================\n* Proyecto: mssr-pays-integration\n* Componente : GetMemberShip\n* Autor : José silva (RationalIT)\n* Versión : 1.0.0\n=========================================================\n*/\nimport React, { Component, seEffect, useState } from \"react\";\nimport { withRouter } from \"next/router\";\nimport ValidateSubscription from \"../../src/components/memberShip/ValidateSubscription\";\nimport BuySubscription from \"../../src/components/memberShip/BuySubscription\";\nimport environment from '../../src/environments/environments';\nimport * as functions from '../../src/components/shared/functions';\n\nclass MemberShip extends React.Component {\n  static async getInitialProps({\n    query\n  }) {\n    return {\n      url: {\n        query\n      }\n    };\n  }\n\n  constructor(props) {\n    console.log('Props1::', this.props);\n    super(props);\n\n    _defineProperty(this, \"API_URI_AWS\", environment.apiUrlAws);\n\n    _defineProperty(this, \"xApikey\", environment.xApikey);\n\n    this.state = {\n      dataphone: [],\n      phoneNumber: \"\"\n    }; //console.log('PHONE::constructor', props.router.query.phone);\n    //this.getMemberShip = this.getMemberShip.bind(this);\n  }\n  /*!=======================================================\n  * Nombre: componentDidMount\n  * Descripción: Se ejecuta antes del render\n  =========================================================*/\n\n\n  componentDidMount() {\n    console.log('Props1::', this.props);\n    console.log('STATE1::', this.state);\n  }\n  /*!=======================================================\n  * Nombre: getMemberShip\n  * Descripción: Verificando si el phone existe en BD para \n    mostrar informacion\n  =========================================================*/\n\n\n  getMemberShip(phone) {}\n\n  render() {\n    // console.log('PHONE render::', this.props);\n    //(this.props.router.query.phone)? this.getMemberShip(this.props.router.query.phone) : null;\n    //this.setState({phoneNumber: phone,});\n    //console.log('phone:', phone);\n    //console.log('this.state2:', this.state);\n\n    /*if (this.state.dataphone.id) {\n      return (\n        <>\n          <BuySubscription dataphone={this.state.dataphone} />\n        </>\n      )\n    } else {\n      return (\n        <>\n          <ValidateSubscription />\n        </>\n      )\n    }*/\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n}\n\nexport default withRouter(MemberShip);","map":{"version":3,"sources":["/Users/rational/u00/repositorios/REACT-REPO/MSSR-NEXT-JS/pages/getmembership/[phone].js"],"names":["React","Component","seEffect","useState","withRouter","ValidateSubscription","BuySubscription","environment","functions","MemberShip","getInitialProps","query","url","constructor","props","console","log","apiUrlAws","xApikey","state","dataphone","phoneNumber","componentDidMount","getMemberShip","phone","render"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,OAArD;AAGA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,oBAAP,MAAiC,sDAAjC;AAEA,OAAOC,eAAP,MAA4B,iDAA5B;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAO,KAAKC,SAAZ,MAA2B,uCAA3B;;AAEA,MAAMC,UAAN,SAAyBT,KAAK,CAACC,SAA/B,CAAyC;AAEvC,eAAaS,eAAb,CAA8B;AAAEC,IAAAA;AAAF,GAA9B,EAAyC;AACvC,WAAO;AAAEC,MAAAA,GAAG,EAAE;AAAED,QAAAA;AAAF;AAAP,KAAP;AACD;;AAIDE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKF,KAA7B;AACA,UAAMA,KAAN;;AAFiB,yCAFLP,WAAW,CAACU,SAEP;;AAAA,qCADTV,WAAW,CAACW,OACH;;AAGjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb,CAHiB,CASjB;AACD;AAEA;AAKD;AACF;AACA;AACA;;;AACEC,EAAAA,iBAAiB,GAAE;AAEjBP,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKF,KAA7B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKG,KAA7B;AAEH;AAGC;AACF;AACA;AACA;AACA;;;AACEI,EAAAA,aAAa,CAACC,KAAD,EAAQ,CACpB;;AAEDC,EAAAA,MAAM,GAAG;AACR;AACC;AACA;AACA;AACA;;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,wBACE,qCADF;AAKD;;AAtEsC;;AAwEzC,eAAerB,UAAU,CAACK,UAAD,CAAzB","sourcesContent":["/*!\n=========================================================\n* Proyecto: mssr-pays-integration\n* Componente : GetMemberShip\n* Autor : José silva (RationalIT)\n* Versión : 1.0.0\n=========================================================\n*/\nimport React, { Component, seEffect, useState } from \"react\";\n\n\nimport { withRouter } from \"next/router\";\nimport ValidateSubscription from \"../../src/components/memberShip/ValidateSubscription\";\n\nimport BuySubscription from \"../../src/components/memberShip/BuySubscription\"\nimport environment from '../../src/environments/environments';\nimport * as functions from '../../src/components/shared/functions';\n\nclass MemberShip extends React.Component {\n\n  static async getInitialProps ({ query }) {\n    return { url: { query } }\n  }\n\n  API_URI_AWS = environment.apiUrlAws;\n  xApikey = environment.xApikey;\n  constructor(props) {\n    console.log('Props1::', this.props);\n    super(props);\n    this.state = {\n      dataphone: [],\n      phoneNumber: \"\"\n      \n    };\n    \n    //console.log('PHONE::constructor', props.router.query.phone);\n   //this.getMemberShip = this.getMemberShip.bind(this);\n\n  }\n\n\n\n\n  /*!=======================================================\n  * Nombre: componentDidMount\n  * Descripción: Se ejecuta antes del render\n  =========================================================*/\n  componentDidMount(){\n\n    console.log('Props1::', this.props);\n    console.log('STATE1::', this.state);\n  \n}\n\n\n  /*!=======================================================\n  * Nombre: getMemberShip\n  * Descripción: Verificando si el phone existe en BD para \n    mostrar informacion\n  =========================================================*/\n  getMemberShip(phone) {\n  }\n\n  render() {\n   // console.log('PHONE render::', this.props);\n    //(this.props.router.query.phone)? this.getMemberShip(this.props.router.query.phone) : null;\n    //this.setState({phoneNumber: phone,});\n    //console.log('phone:', phone);\n    //console.log('this.state2:', this.state);\n\n    /*if (this.state.dataphone.id) {\n      return (\n        <>\n          <BuySubscription dataphone={this.state.dataphone} />\n        </>\n      )\n    } else {\n      return (\n        <>\n          <ValidateSubscription />\n        </>\n      )\n    }*/\n    return (\n      <>\n      </>\n    )\n\n  }\n}\nexport default withRouter(MemberShip);"]},"metadata":{},"sourceType":"module"}