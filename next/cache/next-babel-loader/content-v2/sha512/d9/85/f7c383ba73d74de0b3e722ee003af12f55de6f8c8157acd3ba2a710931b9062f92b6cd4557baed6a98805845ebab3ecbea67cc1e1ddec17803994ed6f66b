{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*!\n=========================================================\n* Proyecto: mssr-pays-integration\n* Componente : GetMemberShip\n* Autor : José silva (RationalIT)\n* Versión : 1.0.0\n=========================================================\n*/\nimport React, { Component } from \"react\";\nimport { withRouter } from 'next/router';\nimport ValidateSubscription from \"../../src/components/memberShip/ValidateSubscription\";\nimport BuySubscription from \"../../src/components/memberShip/BuySubscription\";\nimport environment from '../../src/environments/environments';\nimport * as functions from '../../src/components/shared/functions';\n\nclass MemberShip extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"API_URI_AWS\", environment.apiUrlAws);\n\n    _defineProperty(this, \"xApikey\", environment.xApikey);\n\n    this.state = {\n      dataphone: [],\n      phoneNumber: \"\"\n    }; //console.log('PHONE::constructor', props.router.query.phone);\n    //this.getMemberShip = this.getMemberShip.bind(this);\n  }\n  /*!=======================================================\n  * Nombre: componentDidMount\n  * Descripción: Se ejecuta antes del render\n  =========================================================*/\n\n\n  async componentDidMount() {\n    //console.log('PHONE::', this.state.phoneNumber);\n    console.log('PHONE::', this.props); //const { phone } = this.props.router.query;\n\n    const body = await fetch(`${this.API_URI_AWS}/integration/mssr/${this.props.router.query.phone}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json, text/plain, */*',\n        'x-api-key': this.xApikey\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      const body = {};\n\n      if (data.statusCode === \"200\") {\n        const rs = functions.b64_to_utf8(data.body.rs);\n        body['id'] = data.body.id;\n        body['rs'] = JSON.parse(rs);\n        return body;\n      } else {\n        body['id'] = \"\";\n        return body;\n      }\n    }).catch(err => console.log('#Error#', err)); //Seteando valores en el State\n\n    this.setState({\n      dataphone: body\n    });\n  }\n  /*!=======================================================\n  * Nombre: getMemberShip\n  * Descripción: Verificando si el phone existe en BD para \n    mostrar informacion\n  =========================================================*/\n\n  /*getMemberShip(phone) {\n    console.log('getMemberShip(phone),', phone);\n    this.setState({\n      phoneNumber: phone,\n    });\n  }*/\n\n\n  render() {\n    //this.setState({phoneNumber: phone,});\n    //console.log('phone:', phone);\n    //console.log('this.state2:', this.state);\n\n    /*if (this.state.dataphone.id) {\n      return (\n        <>\n          <BuySubscription dataphone={this.state.dataphone} />\n        </>\n      )\n    } else {\n      return (\n        <>\n          <ValidateSubscription />\n        </>\n      )\n    }*/\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n}\n\nexport default withRouter(MemberShip);","map":{"version":3,"sources":["/Users/rational/u00/repositorios/REACT-REPO/MSSR-NEXT-JS/pages/getmembership/[phone].js"],"names":["React","Component","withRouter","ValidateSubscription","BuySubscription","environment","functions","MemberShip","constructor","props","apiUrlAws","xApikey","state","dataphone","phoneNumber","componentDidMount","console","log","body","fetch","API_URI_AWS","router","query","phone","method","headers","then","res","json","data","statusCode","rs","b64_to_utf8","id","JSON","parse","catch","err","setState","render"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,oBAAP,MAAiC,sDAAjC;AAEA,OAAOC,eAAP,MAA4B,iDAA5B;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAO,KAAKC,SAAZ,MAA2B,uCAA3B;;AAIA,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AAGjCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAEjB,UAAMA,KAAN;;AAFiB,yCAFLJ,WAAW,CAACK,SAEP;;AAAA,qCADTL,WAAW,CAACM,OACH;;AAGjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb,CAHiB,CAQjB;AACD;AAEA;AAKD;AACF;AACA;AACA;;;AACE,QAAMC,iBAAN,GAAyB;AAEvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,KAAKR,KAA5B,EAHuB,CAIvB;;AACE,UAAMS,IAAI,GAAG,MAAMC,KAAK,CAAE,GAAE,KAAKC,WAAY,qBAAoB,KAAKX,KAAL,CAAWY,MAAX,CAAkBC,KAAlB,CAAwBC,KAAM,EAAvE,EAA0E;AAChGC,MAAAA,MAAM,EAAE,KADwF;AAEhGC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,kBAAU,mCAFH;AAGP,qBAAa,KAAKd;AAHX;AAFuF,KAA1E,CAAL,CAOhBe,IAPgB,CAOX,UAAUC,GAAV,EAAe;AACrB,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,KATkB,EAShBF,IATgB,CASX,UAAUG,IAAV,EAAgB;AACtB,YAAMX,IAAI,GAAG,EAAb;;AACA,UAAIW,IAAI,CAACC,UAAL,KAAoB,KAAxB,EAA+B;AAC7B,cAAMC,EAAE,GAAGzB,SAAS,CAAC0B,WAAV,CAAsBH,IAAI,CAACX,IAAL,CAAUa,EAAhC,CAAX;AACAb,QAAAA,IAAI,CAAC,IAAD,CAAJ,GAAaW,IAAI,CAACX,IAAL,CAAUe,EAAvB;AACAf,QAAAA,IAAI,CAAC,IAAD,CAAJ,GAAagB,IAAI,CAACC,KAAL,CAAWJ,EAAX,CAAb;AAEA,eAAOb,IAAP;AACD,OAND,MAMO;AACLA,QAAAA,IAAI,CAAC,IAAD,CAAJ,GAAa,EAAb;AACA,eAAOA,IAAP;AACD;AACF,KArBkB,EAqBhBkB,KArBgB,CAqBVC,GAAG,IAAIrB,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBoB,GAAvB,CArBG,CAAnB,CALqB,CA2BrB;;AACA,SAAKC,QAAL,CAAc;AACZzB,MAAAA,SAAS,EAAEK;AADC,KAAd;AAKD;AAGH;AACF;AACA;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;;;AAEEqB,EAAAA,MAAM,GAAG;AAEP;AACA;AACA;;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,wBACE,qCADF;AAKD;;AA/FgC;;AAkGnC,eAAerC,UAAU,CAACK,UAAD,CAAzB","sourcesContent":["/*!\n=========================================================\n* Proyecto: mssr-pays-integration\n* Componente : GetMemberShip\n* Autor : José silva (RationalIT)\n* Versión : 1.0.0\n=========================================================\n*/\nimport React, { Component } from \"react\";\nimport { withRouter } from 'next/router'\nimport ValidateSubscription from \"../../src/components/memberShip/ValidateSubscription\";\n\nimport BuySubscription from \"../../src/components/memberShip/BuySubscription\"\nimport environment from '../../src/environments/environments';\nimport * as functions from '../../src/components/shared/functions';\n\n\n\nclass MemberShip extends Component {\n  API_URI_AWS = environment.apiUrlAws;\n  xApikey = environment.xApikey;\n  constructor(props) {\n   \n    super(props);\n    this.state = {\n      dataphone: [],\n      phoneNumber: \"\"\n      \n    };\n    //console.log('PHONE::constructor', props.router.query.phone);\n   //this.getMemberShip = this.getMemberShip.bind(this);\n\n  }\n\n\n\n\n  /*!=======================================================\n  * Nombre: componentDidMount\n  * Descripción: Se ejecuta antes del render\n  =========================================================*/\n  async componentDidMount(){\n\n    //console.log('PHONE::', this.state.phoneNumber);\n    console.log('PHONE::', this.props);\n    //const { phone } = this.props.router.query;\n      const body = await fetch(`${this.API_URI_AWS}/integration/mssr/${this.props.router.query.phone}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json, text/plain, */*',\n          'x-api-key': this.xApikey\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        const body = {};\n        if (data.statusCode === \"200\") {\n          const rs = functions.b64_to_utf8(data.body.rs);\n          body['id'] = data.body.id;\n          body['rs'] = JSON.parse(rs);\n  \n          return body;\n        } else {\n          body['id'] = \"\";\n          return body;\n        }\n      }).catch(err => console.log('#Error#', err))\n      //Seteando valores en el State\n      this.setState({\n        dataphone: body,\n      });\n    \n \n    }\n\n\n  /*!=======================================================\n  * Nombre: getMemberShip\n  * Descripción: Verificando si el phone existe en BD para \n    mostrar informacion\n  =========================================================*/\n  /*getMemberShip(phone) {\n    console.log('getMemberShip(phone),', phone);\n    this.setState({\n      phoneNumber: phone,\n    });\n  }*/\n\n  render() {\n \n    //this.setState({phoneNumber: phone,});\n    //console.log('phone:', phone);\n    //console.log('this.state2:', this.state);\n\n    /*if (this.state.dataphone.id) {\n      return (\n        <>\n          <BuySubscription dataphone={this.state.dataphone} />\n        </>\n      )\n    } else {\n      return (\n        <>\n          <ValidateSubscription />\n        </>\n      )\n    }*/\n    return (\n      <>\n      </>\n    )\n\n  }\n}\n\nexport default withRouter(MemberShip);\n"]},"metadata":{},"sourceType":"module"}