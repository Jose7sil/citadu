{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*!\n=========================================================\n* Proyecto: mssr-pays-integration\n* Componente : GetMemberShip\n* Autor : José silva (RationalIT)\n* Versión : 1.0.0\n=========================================================\n*/\nimport React, { Component, seEffect, useState } from \"react\";\nimport { withRouter } from \"next/router\";\nimport ValidateSubscription from \"../../src/components/memberShip/ValidateSubscription\";\nimport BuySubscription from \"../../src/components/memberShip/BuySubscription\";\nimport environment from '../../src/environments/environments';\nimport * as functions from '../../src/components/shared/functions';\n\nclass MemberShip extends Component {\n  constructor(props) {\n    //console.log('Props1::', this.props);\n    super(props);\n\n    _defineProperty(this, \"API_URI_AWS\", environment.apiUrlAws);\n\n    _defineProperty(this, \"xApikey\", environment.xApikey);\n\n    this.state = {\n      dataphone: [],\n      phoneNumber: \"\"\n    }; //console.log('PHONE::constructor', props.router.query.phone);\n\n    this.getMemberShip = this.getMemberShip.bind(this);\n  }\n\n  static getInitialProps({\n    query: {\n      phone\n    }\n  }) {\n    return {\n      phone: phone\n    };\n  }\n  /*!=======================================================\n  * Nombre: componentDidMount\n  * Descripción: Se ejecuta despues del render\n  =========================================================*/\n\n  /*componentDidMount(){\n     console.log('Props1::', this.props);\n    \n    const body = fetch(`${this.API_URI_AWS}/integration/mssr/${this.props.phone}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json, text/plain, /*',\n        'x-api-key': this.xApikey\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      const body = {};\n      if (data.statusCode === \"200\") {\n        const rs = functions.b64_to_utf8(data.body.rs);\n        body['id'] = data.body.id;\n        body['rs'] = JSON.parse(rs);\n         return body;\n      } else {\n        body['id'] = \"\";\n        return body;\n      }\n    }).catch(err => console.log('#Error#', err))\n    //Seteando valores en el State\n    this.setState({\n      dataphone: body,\n    });\n    console.log('STATE1::', this.state);\n  }\n  */\n\n  /*!=======================================================\n  * Nombre: getMemberShip\n  * Descripción: Verificando si el phone existe en BD para \n    mostrar informacion\n  =========================================================*/\n\n\n  getMemberShip() {\n    console.log(\"getmembership\");\n    fetch(`${this.API_URI_AWS}/integration/mssr/${this.props.phone}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json, text/plain, */*',\n        'x-api-key': this.xApikey\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      console.log(\"data\", data);\n    });\n  }\n\n  render() {\n    // console.log('PHONE render::', this.props);\n    //(this.props.router.query.phone)? this.getMemberShip(this.props.router.query.phone) : null;\n    //this.setState({phoneNumber: phone,});\n    //console.log('phone:', phone);\n    //console.log('this.state2:', this.state);\n\n    /*if (this.state.dataphone.id) {\n      return (\n        <>\n          <BuySubscription dataphone={this.state.dataphone} />\n        </>\n      )\n    } else {\n      return (\n        <>\n          <ValidateSubscription />\n        </>\n      )\n    }*/\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n}\n\nexport default withRouter(MemberShip);","map":{"version":3,"sources":["/Users/rational/u00/repositorios/REACT-REPO/MSSR-NEXT-JS/pages/getmembership/[phone].js"],"names":["React","Component","seEffect","useState","withRouter","ValidateSubscription","BuySubscription","environment","functions","MemberShip","constructor","props","apiUrlAws","xApikey","state","dataphone","phoneNumber","getMemberShip","bind","getInitialProps","query","phone","console","log","fetch","API_URI_AWS","method","headers","then","res","json","data","render"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,OAArD;AAGA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,oBAAP,MAAiC,sDAAjC;AAEA,OAAOC,eAAP,MAA4B,iDAA5B;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAO,KAAKC,SAAZ,MAA2B,uCAA3B;;AAEA,MAAMC,UAAN,SAAyBR,SAAzB,CAAmC;AAIjCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;AACA,UAAMA,KAAN;;AAFiB,yCAFLJ,WAAW,CAACK,SAEP;;AAAA,qCADTL,WAAW,CAACM,OACH;;AAGjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb,CAHiB,CASjB;;AACD,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AAEA;;AAED,SAAOC,eAAP,CAAwB;AAAEC,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF;AAAT,GAAxB,EAA8C;AAC5C,WAAO;AAAEA,MAAAA,KAAK,EAAEA;AAAT,KAAP;AACD;AAKD;AACF;AACA;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIE;AACF;AACA;AACA;AACA;;;AACEJ,EAAAA,aAAa,GAAG;AACdK,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAC,IAAAA,KAAK,CAAE,GAAE,KAAKC,WAAY,qBAAoB,KAAKd,KAAL,CAAWU,KAAM,EAA1D,EAA6D;AAChEK,MAAAA,MAAM,EAAE,KADwD;AAEhEC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,kBAAU,mCAFH;AAGP,qBAAa,KAAKd;AAHX;AAFuD,KAA7D,CAAL,CAOGe,IAPH,CAOQ,UAAUC,GAAV,EAAe;AACrB,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,KATD,EASGF,IATH,CASQ,UAAUG,IAAV,EAAgB;AACtBT,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBQ,IAAnB;AACD,KAXD;AAYD;;AAEDC,EAAAA,MAAM,GAAG;AACR;AACC;AACA;AACA;AACA;;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,wBACE,qCADF;AAKD;;AA7GgC;;AA+GnC,eAAe5B,UAAU,CAACK,UAAD,CAAzB","sourcesContent":["/*!\n=========================================================\n* Proyecto: mssr-pays-integration\n* Componente : GetMemberShip\n* Autor : José silva (RationalIT)\n* Versión : 1.0.0\n=========================================================\n*/\nimport React, { Component, seEffect, useState } from \"react\";\n\n\nimport { withRouter } from \"next/router\";\nimport ValidateSubscription from \"../../src/components/memberShip/ValidateSubscription\";\n\nimport BuySubscription from \"../../src/components/memberShip/BuySubscription\"\nimport environment from '../../src/environments/environments';\nimport * as functions from '../../src/components/shared/functions';\n\nclass MemberShip extends Component {\n\n  API_URI_AWS = environment.apiUrlAws;\n  xApikey = environment.xApikey;\n  constructor(props) {\n    //console.log('Props1::', this.props);\n    super(props);\n    this.state = {\n      dataphone: [],\n      phoneNumber: \"\"\n      \n    };\n    \n    //console.log('PHONE::constructor', props.router.query.phone);\n   this.getMemberShip = this.getMemberShip.bind(this);\n\n  }\n\n  static getInitialProps ({ query: { phone } }) {\n    return { phone: phone }\n  }\n\n  \n\n\n  /*!=======================================================\n  * Nombre: componentDidMount\n  * Descripción: Se ejecuta despues del render\n  =========================================================*/\n  /*componentDidMount(){\n\n    console.log('Props1::', this.props);\n    \n    const body = fetch(`${this.API_URI_AWS}/integration/mssr/${this.props.phone}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json, text/plain, /*',\n        'x-api-key': this.xApikey\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      const body = {};\n      if (data.statusCode === \"200\") {\n        const rs = functions.b64_to_utf8(data.body.rs);\n        body['id'] = data.body.id;\n        body['rs'] = JSON.parse(rs);\n\n        return body;\n      } else {\n        body['id'] = \"\";\n        return body;\n      }\n    }).catch(err => console.log('#Error#', err))\n    //Seteando valores en el State\n    this.setState({\n      dataphone: body,\n    });\n    console.log('STATE1::', this.state);\n}\n*/\n\n  /*!=======================================================\n  * Nombre: getMemberShip\n  * Descripción: Verificando si el phone existe en BD para \n    mostrar informacion\n  =========================================================*/\n  getMemberShip() {\n    console.log(\"getmembership\")\n    fetch(`${this.API_URI_AWS}/integration/mssr/${this.props.phone}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json, text/plain, */*',\n        'x-api-key': this.xApikey\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      console.log(\"data\",data);\n    });\n  }\n\n  render() {\n   // console.log('PHONE render::', this.props);\n    //(this.props.router.query.phone)? this.getMemberShip(this.props.router.query.phone) : null;\n    //this.setState({phoneNumber: phone,});\n    //console.log('phone:', phone);\n    //console.log('this.state2:', this.state);\n\n    /*if (this.state.dataphone.id) {\n      return (\n        <>\n          <BuySubscription dataphone={this.state.dataphone} />\n        </>\n      )\n    } else {\n      return (\n        <>\n          <ValidateSubscription />\n        </>\n      )\n    }*/\n    return (\n      <>\n      </>\n    )\n\n  }\n}\nexport default withRouter(MemberShip);"]},"metadata":{},"sourceType":"module"}