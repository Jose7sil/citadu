{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/Users/rational/u00/repositorios/REACT-REPO/MSSR-NEXT-JS/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/rational/u00/repositorios/REACT-REPO/MSSR-NEXT-JS/pages/getmembership/[phone].js\";\n\n/*!\n=========================================================\n* Proyecto: mssr-pays-integration\n* Componente : GetMemberShip\n* Autor : José silva (RationalIT)\n* Versión : 1.0.0\n=========================================================\n*/\nimport React, { Component } from \"react\";\nimport { withRouter } from 'next/router';\nimport ValidateSubscription from \"../../src/components/memberShip/ValidateSubscription\";\nimport BuySubscription from \"../../src/components/memberShip/BuySubscription\";\nimport environment from '../../src/environments/environments';\nimport * as functions from '../../src/components/shared/functions';\n\nclass MemberShip extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"API_URI_AWS\", environment.apiUrlAws);\n\n    _defineProperty(this, \"xApikey\", environment.xApikey);\n\n    this.state = {\n      dataphone: [],\n      phoneNumber: \"\"\n    };\n    this.getMemberShip = this.getMemberShip.bind(this, props);\n  }\n  /*!=======================================================\n  * Nombre: componentDidMount\n  * Descripción: Se ejecuta antes del render\n  =========================================================*/\n\n\n  componentDidMount() {\n    this.getMemberShip();\n  }\n  /*!=======================================================\n  * Nombre: getMemberShip\n  * Descripción: Verificando si el phone existe en BD para \n    mostrar informacion\n  =========================================================*/\n\n\n  async getMemberShip(props) {\n    // Obtenemos el parametro en esta variable\n    //const phone = props.match.params.phone; //ANTES\n    const phone = props.url.query.phone; //AHORA\n    //console.log('PHONE:', phone);\n\n    const body = await fetch(`${this.API_URI_AWS}/integration/mssr/${phone}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json, text/plain, */*',\n        'x-api-key': this.xApikey\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      const body = {};\n\n      if (data.statusCode === \"200\") {\n        const rs = functions.b64_to_utf8(data.body.rs);\n        body['id'] = data.body.id;\n        body['rs'] = JSON.parse(rs);\n        return body;\n      } else {\n        body['id'] = \"\";\n        return body;\n      }\n    }).catch(err => console.log('#Error#', err)); //Seteando valores en el State\n\n    this.setState({\n      dataphone: body\n    });\n  }\n\n  render() {\n    if (this.state.dataphone.id) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(BuySubscription, {\n          dataphone: this.state.dataphone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(ValidateSubscription, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    }\n  }\n\n}\n\nexport default MemberShip;","map":{"version":3,"sources":["/Users/rational/u00/repositorios/REACT-REPO/MSSR-NEXT-JS/pages/getmembership/[phone].js"],"names":["React","Component","withRouter","ValidateSubscription","BuySubscription","environment","functions","MemberShip","constructor","props","apiUrlAws","xApikey","state","dataphone","phoneNumber","getMemberShip","bind","componentDidMount","phone","url","query","body","fetch","API_URI_AWS","method","headers","then","res","json","data","statusCode","rs","b64_to_utf8","id","JSON","parse","catch","err","console","log","setState","render"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,oBAAP,MAAiC,sDAAjC;AAEA,OAAOC,eAAP,MAA4B,iDAA5B;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAO,KAAKC,SAAZ,MAA2B,uCAA3B;;AAGA,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AAIjCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,yCAHLJ,WAAW,CAACK,SAGP;;AAAA,qCAFTL,WAAW,CAACM,OAEH;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAKA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,EAA6BP,KAA7B,CAArB;AAED;AACD;AACF;AACA;AACA;;;AACEQ,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,aAAL;AACD;AAED;AACF;AACA;AACA;AACA;;;AACE,QAAMA,aAAN,CAAoBN,KAApB,EAA2B;AACzB;AACA;AACA,UAAMS,KAAK,GAAIT,KAAK,CAACU,GAAN,CAAUC,KAAV,CAAgBF,KAA/B,CAHyB,CAGY;AAErC;;AAGA,UAAMG,IAAI,GAAG,MAAMC,KAAK,CAAE,GAAE,KAAKC,WAAY,qBAAoBL,KAAM,EAA/C,EAAkD;AACxEM,MAAAA,MAAM,EAAE,KADgE;AAExEC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,kBAAU,mCAFH;AAGP,qBAAa,KAAKd;AAHX;AAF+D,KAAlD,CAAL,CAOhBe,IAPgB,CAOX,UAAUC,GAAV,EAAe;AACrB,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,KATkB,EAShBF,IATgB,CASX,UAAUG,IAAV,EAAgB;AACtB,YAAMR,IAAI,GAAG,EAAb;;AACA,UAAIQ,IAAI,CAACC,UAAL,KAAoB,KAAxB,EAA+B;AAC7B,cAAMC,EAAE,GAAGzB,SAAS,CAAC0B,WAAV,CAAsBH,IAAI,CAACR,IAAL,CAAUU,EAAhC,CAAX;AACAV,QAAAA,IAAI,CAAC,IAAD,CAAJ,GAAaQ,IAAI,CAACR,IAAL,CAAUY,EAAvB;AACAZ,QAAAA,IAAI,CAAC,IAAD,CAAJ,GAAaa,IAAI,CAACC,KAAL,CAAWJ,EAAX,CAAb;AAEA,eAAOV,IAAP;AACD,OAND,MAMO;AACLA,QAAAA,IAAI,CAAC,IAAD,CAAJ,GAAa,EAAb;AACA,eAAOA,IAAP;AACD;AACF,KArBkB,EAqBhBe,KArBgB,CAqBVC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,GAAvB,CArBG,CAAnB,CARyB,CA8BzB;;AACA,SAAKG,QAAL,CAAc;AACZ3B,MAAAA,SAAS,EAAEQ;AADC,KAAd;AAGD;;AACDoB,EAAAA,MAAM,GAAG;AACP,QAAI,KAAK7B,KAAL,CAAWC,SAAX,CAAqBoB,EAAzB,EAA6B;AAC3B,0BACE;AAAA,+BACE,QAAC,eAAD;AAAiB,UAAA,SAAS,EAAE,KAAKrB,KAAL,CAAWC;AAAvC;AAAA;AAAA;AAAA;AAAA;AADF,uBADF;AAKD,KAND,MAMO;AACL,0BACE;AAAA,+BACE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AADF,uBADF;AAKD;AAGF;;AA9EgC;;AAiFnC,eAAeN,UAAf","sourcesContent":["/*!\n=========================================================\n* Proyecto: mssr-pays-integration\n* Componente : GetMemberShip\n* Autor : José silva (RationalIT)\n* Versión : 1.0.0\n=========================================================\n*/\nimport React, { Component } from \"react\";\nimport { withRouter } from 'next/router'\nimport ValidateSubscription from \"../../src/components/memberShip/ValidateSubscription\";\n\nimport BuySubscription from \"../../src/components/memberShip/BuySubscription\"\nimport environment from '../../src/environments/environments';\nimport * as functions from '../../src/components/shared/functions';\n\n\nclass MemberShip extends Component {\n  API_URI_AWS = environment.apiUrlAws;\n  xApikey = environment.xApikey;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataphone: [],\n      phoneNumber: \"\"\n    };\n    \n    this.getMemberShip = this.getMemberShip.bind(this,props);\n  \n  }\n  /*!=======================================================\n  * Nombre: componentDidMount\n  * Descripción: Se ejecuta antes del render\n  =========================================================*/\n  componentDidMount() {\n    this.getMemberShip();\n  }\n\n  /*!=======================================================\n  * Nombre: getMemberShip\n  * Descripción: Verificando si el phone existe en BD para \n    mostrar informacion\n  =========================================================*/\n  async getMemberShip(props) {\n    // Obtenemos el parametro en esta variable\n    //const phone = props.match.params.phone; //ANTES\n    const phone  = props.url.query.phone //AHORA\n\n    //console.log('PHONE:', phone);\n\n    \n    const body = await fetch(`${this.API_URI_AWS}/integration/mssr/${phone}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json, text/plain, */*',\n        'x-api-key': this.xApikey\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      const body = {};\n      if (data.statusCode === \"200\") {\n        const rs = functions.b64_to_utf8(data.body.rs);\n        body['id'] = data.body.id;\n        body['rs'] = JSON.parse(rs);\n\n        return body;\n      } else {\n        body['id'] = \"\";\n        return body;\n      }\n    }).catch(err => console.log('#Error#', err))\n    //Seteando valores en el State\n    this.setState({\n      dataphone: body,\n    });\n  }\n  render() {\n    if (this.state.dataphone.id) {\n      return (\n        <>\n          <BuySubscription dataphone={this.state.dataphone} />\n        </>\n      )\n    } else {\n      return (\n        <>\n          <ValidateSubscription />\n        </>\n      )\n    }\n\n\n  }\n}\n\nexport default MemberShip;\n"]},"metadata":{},"sourceType":"module"}