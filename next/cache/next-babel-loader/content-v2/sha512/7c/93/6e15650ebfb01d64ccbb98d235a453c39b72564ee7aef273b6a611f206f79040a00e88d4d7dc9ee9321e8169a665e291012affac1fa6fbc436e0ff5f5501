{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _classCallCheck from \"/Users/rational/u00/repositorios/REACT-REPO/MSSR-NEXT-JS/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rational/u00/repositorios/REACT-REPO/MSSR-NEXT-JS/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/rational/u00/repositorios/REACT-REPO/MSSR-NEXT-JS/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/rational/u00/repositorios/REACT-REPO/MSSR-NEXT-JS/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/rational/u00/repositorios/REACT-REPO/MSSR-NEXT-JS/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rational/u00/repositorios/REACT-REPO/MSSR-NEXT-JS/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/rational/u00/repositorios/REACT-REPO/MSSR-NEXT-JS/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport environment from '../../../environments/environments';\nimport Progressbar from '../../shared/spinner/progressbar';\nimport { withRouter, NextRouter } from 'next/router';\n\nvar Paypal = /*#__PURE__*/function (_Component) {\n  _inherits(Paypal, _Component);\n\n  var _super = _createSuper(Paypal);\n\n  function Paypal(props) {\n    var _this;\n\n    _classCallCheck(this, Paypal);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"API_URI\", environment.apiUrlAws);\n\n    _defineProperty(_assertThisInitialized(_this), \"xApikey\", environment.xApikey);\n\n    _defineProperty(_assertThisInitialized(_this), \"clientId\", environment.clientId);\n\n    _this.state = {\n      id: \"\",\n      products: props.state.products,\n      detail: props.state.detail,\n      plan: props.state.nameprod,\n      duracion: props.state.duracion,\n      shopping: {},\n      phoneNumber: 0,\n      show: false\n    };\n    return _this;\n  }\n  /*!=======================================================\n  * Nombre: componentDidMount\n  * Descripción: Se ejecuta antes del render\n  =========================================================*/\n\n\n  _createClass(Paypal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(props) {\n      var _this2 = this;\n\n      var phoneNumber = localStorage.getItem('phoneNumber');\n      this.state.products.forEach(function (data) {\n        var shopping = {\n          \"categoria\": data.product,\n          \"currency\": data.currency,\n          \"duracion\": _this2.state.duracion\n        };\n\n        _this2.setState({\n          shopping: shopping,\n          phoneNumber: phoneNumber\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsx(PayPalButton, {\n          options: {\n            clientId: this.clientId,\n            currency: \"USD\" //vault:true //Si la transacción establece un acuerdo de facturación o utiliza una bóveda.\n\n          },\n          disableCard: true,\n          style: {\n            shape: 'rect',\n            color: 'gold',\n            layout: 'vertical',\n            label: 'pay'\n          },\n          createOrder: function createOrder(data, actions) {\n            // Call your server to save the transaction\n            return fetch(\"\".concat(_this3.API_URI, \"/checkout/order/paypal\"), {\n              method: 'POST',\n              body: JSON.stringify(_this3.state.shopping),\n              headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json, text/plain, */*',\n                'x-api-key': _this3.xApikey\n              }\n            }).then(function (res) {\n              return res.json();\n            }).then(function (data) {\n              return data.body.value; // the data is the order object returned from the api call, its not the BrainTree.Response object\n            }).catch(function (err) {\n              return console.log('#Error#', err);\n            });\n          },\n          shippingPreference: \"NO_SHIPPING\" // preferencia de envío => default is \"GET_FROM_FILE\"\n          ,\n          onSuccess: function onSuccess(details, data) {\n            if (details.status == \"COMPLETED\") {\n              //COMPLETED\n              var detalle = {}; //Variable local Storage\n\n              var detail_pay = {}; //Variable data a aguardar en BD\n\n              detalle['id'] = details.id;\n              details.purchase_units.forEach(function (data) {\n                detalle['currency_code'] = data.amount.currency_code;\n                detalle['value'] = data.amount.value;\n                detail_pay['value'] = data.amount.value;\n                detail_pay['duration'] = _this3.state.duracion;\n                detail_pay['method'] = \"Paypal\";\n                detail_pay['status'] = details.status;\n                detail_pay['category'] = _this3.state.shopping.categoria;\n                detail_pay['client_id'] = _this3.state.phoneNumber;\n                detail_pay['detail'] = details;\n              }); // Call your server to save the transaction\n\n              return fetch(\"\".concat(_this3.API_URI, \"/purchases\"), {\n                method: 'POST',\n                body: JSON.stringify(detail_pay),\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json',\n                  'x-api-key': _this3.xApikey\n                }\n              }).then(function (res) {\n                res.json();\n                localStorage.setItem('detalle', JSON.stringify(detalle)); //Redirect\n\n                _this3.props.router.push({\n                  pathname: \"/order/payment/\".concat(details.status)\n                });\n              }).catch(function (err) {\n                return console.log('ERROR', err);\n              });\n            }\n          } //Si un error impide el pago por parte del comprador. \n          //Este manejador de errores es un comodín. \n          //No se espera que los errores en este punto se manejen más allá de mostrar un mensaje de error genérico o una página.\n          ,\n          onError: function onError(err) {\n            console.log(\"onError:\", err); //Redirect\n\n            _this3.props.router.push(\"/order/payment/ERROR\");\n          } // onCancel => Muestre una página de cancelación o regrese al carrito de compras.\n          ,\n          onCancel: function onCancel(data) {} // catchError => Transacción rechazada o con errores. \n          ,\n          catchError: function catchError(err) {\n            console.log(\"catchError:\", err); //Redirect\n\n            _this3.props.router.push(\"/order/payment/ERROR\");\n          }\n        })\n      });\n    }\n  }]);\n\n  return Paypal;\n}(Component);\n\nexport default withRouter(Paypal);","map":null,"metadata":{},"sourceType":"module"}