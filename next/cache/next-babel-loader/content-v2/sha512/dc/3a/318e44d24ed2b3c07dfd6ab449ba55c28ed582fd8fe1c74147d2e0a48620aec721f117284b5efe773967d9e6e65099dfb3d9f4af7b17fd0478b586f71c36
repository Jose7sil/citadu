{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rational/u00/repositorios/REACT-REPO/MSSR-NEXT-JS/pages/getmembership/[phone].js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*!\n=========================================================\n* Proyecto: mssr-pays-integration\n* Componente : GetMemberShip\n* Autor : José silva (RationalIT)\n* Versión : 1.0.0\n=========================================================\n*/\nimport React, { Component, seEffect, useState } from \"react\";\nimport { withRouter } from \"next/router\";\nimport ValidateSubscription from \"../../src/components/memberShip/ValidateSubscription\";\nimport BuySubscription from \"../../src/components/memberShip/BuySubscription\";\nimport environment from '../../src/environments/environments';\nimport * as functions from '../../src/components/shared/functions';\n\nclass MemberShip extends Component {\n  constructor(props) {\n    //console.log('Props1::', this.props);\n    super(props);\n\n    _defineProperty(this, \"API_URI_AWS\", environment.apiUrlAws);\n\n    _defineProperty(this, \"xApikey\", environment.xApikey);\n\n    _defineProperty(this, \"componentes\", \" \");\n\n    this.state = {\n      dataphone: [],\n      phoneNumber: \"\"\n    }; //console.log('PHONE::constructor', props.router.query.phone);\n\n    this.getMemberShip = this.getMemberShip.bind(this); // this.getMemberShip();\n  }\n\n  static getInitialProps({\n    query: {\n      phone\n    }\n  }) {\n    return {\n      phone: phone\n    };\n  }\n  /*!=======================================================\n  * Nombre: componentDidMount\n  * Descripción: Se ejecuta despues del render\n  =========================================================*/\n\n  /*componentDidMount(){\n     console.log('Props1::', this.props);\n    \n    const body = fetch(`${this.API_URI_AWS}/integration/mssr/${this.props.phone}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json, text/plain, /*',\n        'x-api-key': this.xApikey\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      const body = {};\n      if (data.statusCode === \"200\") {\n        const rs = functions.b64_to_utf8(data.body.rs);\n        body['id'] = data.body.id;\n        body['rs'] = JSON.parse(rs);\n         return body;\n      } else {\n        body['id'] = \"\";\n        return body;\n      }\n    }).catch(err => console.log('#Error#', err))\n    //Seteando valores en el State\n    this.setState({\n      dataphone: body,\n    });\n    console.log('STATE1::', this.state);\n  }\n  */\n\n  /*!=======================================================\n  * Nombre: getMemberShip\n  * Descripción: Verificando si el phone existe en BD para \n    mostrar informacion\n  =========================================================*/\n\n\n  async getMemberShip() {\n    console.log(\"getmembership\");\n    const body = await fetch(`${this.API_URI_AWS}/integration/mssr/${this.props.phone}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json, text/plain, /*',\n        'x-api-key': this.xApikey\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      const body = {};\n      console.log(data);\n\n      if (data.statusCode === \"200\") {\n        const rs = functions.b64_to_utf8(data.body.rs);\n        body['id'] = data.body.id;\n        body['rs'] = JSON.parse(rs);\n        return body;\n      } else {\n        body['id'] = \"\";\n        return body;\n      }\n    }).catch(err => console.log('#Error#', err)); //Seteando valores en el State\n\n    this.componentes = body.id !== \"\" ? /*#__PURE__*/_jsxDEV(BuySubscription, {\n      dataphone: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 44\n    }, this) : /*#__PURE__*/_jsxDEV(ValidateSubscription, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 85\n    }, this);\n    this.setState({\n      dataphone: body\n    });\n  }\n\n  componentDidMount() {\n    this.getMemberShip();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(\"nextState\", nextState);\n\n    if (nextState.dataphone && nextState.dataphone.id) {\n      console.log(\"true\");\n      return true;\n    } else {\n      console.log(\"false\");\n      return false;\n    }\n  }\n\n  render() {\n    // console.log('PHONE render::', this.props);\n    //(this.props.router.query.phone)? this.getMemberShip(this.props.router.query.phone) : null;\n    //this.setState({phoneNumber: phone,});\n    //console.log('phone:', phone);\n    //console.log('this.state2:', this.state);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", this.componentes, \"  \"]\n    }, void 0, true);\n  }\n\n}\n\nexport default withRouter(MemberShip);","map":{"version":3,"sources":["/Users/rational/u00/repositorios/REACT-REPO/MSSR-NEXT-JS/pages/getmembership/[phone].js"],"names":["React","Component","seEffect","useState","withRouter","ValidateSubscription","BuySubscription","environment","functions","MemberShip","constructor","props","apiUrlAws","xApikey","state","dataphone","phoneNumber","getMemberShip","bind","getInitialProps","query","phone","console","log","body","fetch","API_URI_AWS","method","headers","then","res","json","data","statusCode","rs","b64_to_utf8","id","JSON","parse","catch","err","componentes","setState","componentDidMount","shouldComponentUpdate","nextProps","nextState","render"],"mappings":"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","sourcesContent":["/*!\n=========================================================\n* Proyecto: mssr-pays-integration\n* Componente : GetMemberShip\n* Autor : José silva (RationalIT)\n* Versión : 1.0.0\n=========================================================\n*/\nimport React, { Component, seEffect, useState } from \"react\";\n\n\nimport { withRouter } from \"next/router\";\nimport ValidateSubscription from \"../../src/components/memberShip/ValidateSubscription\";\n\nimport BuySubscription from \"../../src/components/memberShip/BuySubscription\"\nimport environment from '../../src/environments/environments';\nimport * as functions from '../../src/components/shared/functions';\n\nclass MemberShip extends Component {\n\n  API_URI_AWS = environment.apiUrlAws;\n  xApikey = environment.xApikey;\n  componentes = \" \";\n  constructor(props) {\n    //console.log('Props1::', this.props);\n    super(props);\n    this.state = {\n      dataphone: [],\n      phoneNumber: \"\"\n      \n    };\n    \n    //console.log('PHONE::constructor', props.router.query.phone);\n   this.getMemberShip = this.getMemberShip.bind(this);\n   // this.getMemberShip();\n  }\n\n  static getInitialProps ({ query: { phone } }) {\n    return { phone: phone }\n  }\n\n  \n\n\n  /*!=======================================================\n  * Nombre: componentDidMount\n  * Descripción: Se ejecuta despues del render\n  =========================================================*/\n  /*componentDidMount(){\n\n    console.log('Props1::', this.props);\n    \n    const body = fetch(`${this.API_URI_AWS}/integration/mssr/${this.props.phone}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json, text/plain, /*',\n        'x-api-key': this.xApikey\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      const body = {};\n      if (data.statusCode === \"200\") {\n        const rs = functions.b64_to_utf8(data.body.rs);\n        body['id'] = data.body.id;\n        body['rs'] = JSON.parse(rs);\n\n        return body;\n      } else {\n        body['id'] = \"\";\n        return body;\n      }\n    }).catch(err => console.log('#Error#', err))\n    //Seteando valores en el State\n    this.setState({\n      dataphone: body,\n    });\n    console.log('STATE1::', this.state);\n}\n*/\n\n  /*!=======================================================\n  * Nombre: getMemberShip\n  * Descripción: Verificando si el phone existe en BD para \n    mostrar informacion\n  =========================================================*/\n  async getMemberShip() {\n    console.log(\"getmembership\");\n    const body = await fetch(`${this.API_URI_AWS}/integration/mssr/${this.props.phone}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json, text/plain, /*',\n        'x-api-key': this.xApikey\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      const body = {};\n      console.log(data);\n      if (data.statusCode === \"200\") {\n        const rs = functions.b64_to_utf8(data.body.rs);\n        body['id'] = data.body.id;\n        body['rs'] = JSON.parse(rs);\n        return body;\n      } else {\n        body['id'] = \"\";\n        return body;\n      }\n    }).catch(err => console.log('#Error#', err))\n    //Seteando valores en el State\n    this.componentes = (body.id !== \"\") ? (<BuySubscription dataphone={body} />) : (<ValidateSubscription />);\n    this.setState({\n      dataphone: body,\n    });\n\n  }\n\n  componentDidMount(){\n    this.getMemberShip();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(\"nextState\",nextState);\n  \n    if (nextState.dataphone && nextState.dataphone.id) {\n      console.log(\"true\");\n      return true;\n    } else {\n      console.log(\"false\");\n      return false;\n    }\n  }\n  render() {\n   // console.log('PHONE render::', this.props);\n    //(this.props.router.query.phone)? this.getMemberShip(this.props.router.query.phone) : null;\n    //this.setState({phoneNumber: phone,});\n    //console.log('phone:', phone);\n    //console.log('this.state2:', this.state);\n\n    \n    return ( <> {this.componentes}  </> )\n\n  }\n}\nexport default withRouter(MemberShip);"]},"metadata":{},"sourceType":"module"}